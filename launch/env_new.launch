<launch>
    <!-- args -->
    <arg name="world_name" default="dingo_race.world" />
    <!-- <arg name="world_name" default="corridor_world.world" /> -->
    <!-- <arg name="world_name" default="empty_world.world" /> -->

    <arg name="map_path" value="$(find test_dingo)/maps/dingo_race.yaml" />
    <!-- <arg name="map_path" value="$(find test_dingo)/maps/map_corridor_world_gmapping.yaml" /> -->

    <arg name="config_name" default="nav.rviz" />


    <!-- 1. gazebo:加载指定world; 运行spawn机器人根据生成位置，详见dingo_gazebo的empty_world.launch -->
    <include file="$(find dingo_gazebo)/launch/empty_world.launch">
        <arg name="world_name" value="$(find test_dingo)/worlds/$(arg world_name)" />
        <arg name="x"     default="0"/>
        <arg name="y"     default="0"/>
        <arg name="z"     default="0"/>
        <arg name="yaw"   default="0"/>
    </include>


    <!-- 2. rviz:打开rviz，读取指定config  -->
    <node pkg="rviz" type="rviz" name="rviz" output="screen" args="-d $(find test_dingo)/config/$(arg config_name)" />


    <!-- 3. map_server:加载地图 -->
    <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_path)"/>


    <!-- 4. amcl:定位 -->
    <include file="$(find test_dingo)/launch/nav03_amcl.launch"/>


    <!-- 5. costmap_2D:提供包含障碍物信息的代价地图-->
    <rosparam file="$(find test_dingo)/params/costmap_2d_dingo_global.yaml" command="load" ns="/costmap_global/costmap" />
    <rosparam file="$(find test_dingo)/params/costmap_2d_dingo_local.yaml" command="load" ns="/costmap_local/costmap" />
    <node pkg="costmap_2d" type="costmap_2d_node" name="costmap_global" output="screen"/>
    <!-- <node pkg="costmap_2d" type="costmap_2d_node" name="costmap_local" output="screen"/> -->
</launch>